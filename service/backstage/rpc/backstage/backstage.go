// Code generated by goctl. DO NOT EDIT.
// Source: backstage.proto

package backstage

import (
	"context"

	"backstage/rpc/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	JobRequest  = rpc.JobRequest
	JobResponse = rpc.JobResponse
	PeoRequest  = rpc.PeoRequest
	PeoResponse = rpc.PeoResponse

	Backstage interface {
		Get24P(ctx context.Context, in *PeoRequest, opts ...grpc.CallOption) (*PeoResponse, error)
		GetSeaJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error)
	}

	defaultBackstage struct {
		cli zrpc.Client
	}
)

func NewBackstage(cli zrpc.Client) Backstage {
	return &defaultBackstage{
		cli: cli,
	}
}

func (m *defaultBackstage) Get24P(ctx context.Context, in *PeoRequest, opts ...grpc.CallOption) (*PeoResponse, error) {
	client := rpc.NewBackstageClient(m.cli.Conn())
	return client.Get24P(ctx, in, opts...)
}

func (m *defaultBackstage) GetSeaJob(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error) {
	client := rpc.NewBackstageClient(m.cli.Conn())
	return client.GetSeaJob(ctx, in, opts...)
}
