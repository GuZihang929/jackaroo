// Code generated by goctl. DO NOT EDIT.
// Source: job.proto

package sjob

import (
	"context"

	"job/rpc/rpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Job              = rpc.Job
	SerchJobRequest  = rpc.SerchJobRequest
	SerchJobResponse = rpc.SerchJobResponse

	SJob interface {
		Login(ctx context.Context, in *SerchJobRequest, opts ...grpc.CallOption) (*SerchJobResponse, error)
	}

	defaultSJob struct {
		cli zrpc.Client
	}
)

func NewSJob(cli zrpc.Client) SJob {
	return &defaultSJob{
		cli: cli,
	}
}

func (m *defaultSJob) Login(ctx context.Context, in *SerchJobRequest, opts ...grpc.CallOption) (*SerchJobResponse, error) {
	client := rpc.NewSJobClient(m.cli.Conn())
	return client.Login(ctx, in, opts...)
}
