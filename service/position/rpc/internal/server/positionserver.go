// Code generated by goctl. DO NOT EDIT.
// Source: position.proto

package server

import (
	"context"

	"jackaroo/service/position/rpc/internal/logic"
	"jackaroo/service/position/rpc/internal/svc"
	"jackaroo/service/position/rpc/types/position"
)

type PositionServer struct {
	svcCtx *svc.ServiceContext
	position.UnimplementedPositionServer
}

func NewPositionServer(svcCtx *svc.ServiceContext) *PositionServer {
	return &PositionServer{
		svcCtx: svcCtx,
	}
}

func (s *PositionServer) Create(ctx context.Context, in *position.CreateRequest) (*position.CreateResponse, error) {
	l := logic.NewCreateLogic(ctx, s.svcCtx)
	return l.Create(in)
}

func (s *PositionServer) Update(ctx context.Context, in *position.UpdateRequest) (*position.UpdateResponse, error) {
	l := logic.NewUpdateLogic(ctx, s.svcCtx)
	return l.Update(in)
}

func (s *PositionServer) Remove(ctx context.Context, in *position.RemoveRequest) (*position.RemoveResponse, error) {
	l := logic.NewRemoveLogic(ctx, s.svcCtx)
	return l.Remove(in)
}

func (s *PositionServer) Refresh(ctx context.Context, in *position.RefreshRequest) (*position.RefreshResponse, error) {
	l := logic.NewRefreshLogic(ctx, s.svcCtx)
	return l.Refresh(in)
}
