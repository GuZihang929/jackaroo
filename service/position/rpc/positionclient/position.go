// Code generated by goctl. DO NOT EDIT.
// Source: position.proto

package positionclient

import (
	"context"

	"xiangxiang/jackaroo/service/position/rpc/types/position"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateRequest   = position.CreateRequest
	CreateResponse  = position.CreateResponse
	RefreshRequest  = position.RefreshRequest
	RefreshResponse = position.RefreshResponse
	RemoveRequest   = position.RemoveRequest
	RemoveResponse  = position.RemoveResponse
	UpdateRequest   = position.UpdateRequest
	UpdateResponse  = position.UpdateResponse

	Position interface {
		Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
		Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
		Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
		Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error)
	}

	defaultPosition struct {
		cli zrpc.Client
	}
)

func NewPosition(cli zrpc.Client) Position {
	return &defaultPosition{
		cli: cli,
	}
}

func (m *defaultPosition) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	client := position.NewPositionClient(m.cli.Conn())
	return client.Create(ctx, in, opts...)
}

func (m *defaultPosition) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	client := position.NewPositionClient(m.cli.Conn())
	return client.Update(ctx, in, opts...)
}

func (m *defaultPosition) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	client := position.NewPositionClient(m.cli.Conn())
	return client.Remove(ctx, in, opts...)
}

func (m *defaultPosition) Refresh(ctx context.Context, in *RefreshRequest, opts ...grpc.CallOption) (*RefreshResponse, error) {
	client := position.NewPositionClient(m.cli.Conn())
	return client.Refresh(ctx, in, opts...)
}
